import "../../main.css";
import { Review } from "../../../../types/review";
import ReviewCard from "./review-card";
import ProgressPoint from "../../../../shared/Buttons/Slider/ProgressPoint";
import PointsSlider from "../PointsSlider";
import { useState } from "react";

const data: Review[]= [
    {
        id: '0',
        author: "–õ—é–¥–º–∏–ª–∞ - –º–∞–º–∞, –ï–ì–≠",
        text:"–°–ø–∞—Å–∏–±–æ –í–∞–º –æ–≥—Ä–æ–º–Ω–æ–µ, –ö—Å–µ–Ω–∏—è."+ 
        "–í—ã –¥–ª—è –ú–∏—à–∏ –ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç. –°–ø–∞—Å–∏–±–æ –∑–∞ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—É—é –æ–±—Å—Ç–∞–Ω–æ–≤–∫—É –Ω–∞ –∑–∞–Ω—è—Ç–∏—è—Ö, –∑–∞ –Ω–µ—Ä–∞–≤–Ω–æ–¥—É—à–∏–µ, –∑–∞ —É–º–µ–Ω–∏–µ..."
    },
    {
        id: '1',
        author: "–ê–Ω–Ω–∞ - —É—á–µ–Ω–∏—Ü–∞, 8 –∫–ª–∞—Å—Å + –û–ì–≠",
        text:"–Ø —Å–¥–∞–ª–∞ –û–ì–≠!!! –ö—Å–µ–Ω–∏—è, –°–ø–∞—Å–∏–±–æ –í–∞–º –û–ì–†–û–ú–ù–û–ï üíñüíñüíñ –ù–µ –∑–Ω–∞—é, —á—Ç–æ –±—ã –±–µ–∑ –í–∞—Å –¥–µ–ª–∞–ª–∞)))"
    },
    {
        id: '2',
        author: "–°–µ—Ä–≥–µ–π - –ø–∞–ø–∞ —É—á–µ–Ω–∏–∫–∞, –û–ì–≠",
        text: "–£ –°–µ—Ä–≥–µ—è –ø–æ —Ä—É—Å—Å–∫–æ–º—É –∑–∞ –û–ì–≠ —á–µ—Ç–≤—ë—Ä–∫–∞. –°–ø–∞—Å–∏–±–æ –≤–∞–º –∑–∞ –ø–æ–º–æ—â—å, –ö—Å–µ–Ω–∏—è, –Ω–∞–¥–µ–µ–º—Å—è –Ω–∞ –¥–∞–ª—å–Ω–µ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ)))."
    }
]

const BLOCK_LENGTH = 3;

const Reviews = () => {
    const [start] = useState(0);
    // const [end, setEnd] = useState(BLOCK_LENGTH);

    return (
        <div className="reviews-container">
            <div className="text--heading2 text-600 title-2">–û—Ç–∑—ã–≤—ã</div>
            <div className="text--body-s text-400 about">–ß—Ç–æ –æ –Ω–∞—Å –≥–æ–≤–æ—Ä—è—Ç –Ω–∞—à–∏ —Å—Ç—É–¥–µ–Ω—Ç—ã –∏ –∏—Ö —Ä–æ–¥–∏—Ç–µ–ª–∏</div>
            <div className="cards">
                {data.map((review) => (
                    <ReviewCard key={review.author} author={review.author} text={review.text}/>
                ))}
            </div>
            {data.length >= BLOCK_LENGTH && 
            <PointsSlider 
                onRightClick={() =>{}}
                onLeftClick={() =>{}}
                children={
                data.map((review) => (<ProgressPoint key={review.author} 
                    isActive={Number(review.id) === start}/>))
                }
            />}
            {/* { (
                    <div className="slider-points-container">
                       <Slider imagePath={Arrow}
                            onClick={() =>{}} imgClassName="left-slider"/>
                        {data.map((review) => (
                            <ProgressPoint key={review.author} isActive={false}/>
                        ))}
                       <Slider
                            imagePath={Arrow}
                            onClick={() =>{}} imgClassName="right-slider"/>
                    </div>)
                } */}
        </div>
    );
};

export default Reviews;